datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Role {
  ADMIN
  USER
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  profile       Profile?
  accounts      Account[]
  blogs         Blog[]

  role Role @default(USER)
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int    @unique
}

model Blog {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  title      String?
  content    String?
  coverImage String?
  author     User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   Int
  tags       Tag[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  blogs Blog[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
